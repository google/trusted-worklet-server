// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package aviary.function;

import "google/rpc/status.proto";
import "google/protobuf/any.proto";

// Bidding function specification.
message BiddingFunctionSpec {
  // The raw JS source code for the custom bidding function.
  string bidding_function_source = 1;

  // Possible types of functions that can be run in the TURTLEDOVE simulation.
  enum FunctionType {
    // Default value that should not be used.
    FUNCTION_TYPE_UNSPECIFIED = 0;
    // Buyer's interest group bidding function as described in FLEDGE. See
    // https://github.com/WICG/turtledove/blob/main/FLEDGE.md#32-on-device-bidding.
    FLEDGE_BIDDING_FUNCTION = 1;

    // Seller's ad scoring function as described in FLEDGE. See
    // https://github.com/WICG/turtledove/blob/main/FLEDGE.md#23-scoring-bids.
    FLEDGE_AD_SCORING_FUNCTION = 2;
  }
  // The type of the function that describes its invocation interface.
  FunctionType type = 2;

  // Whether to flatten function arguments from the fields of the input
  // object.
  //
  // When false, input message is converted to a JSON object, which is
  // provided as a single argument to the function.
  //
  // When true, each field in the input message  converted into a JSON
  // value becomes an individual argument to the function in the order of
  // declaration in the protocol buffer.
  bool flatten_function_arguments = 3;
}

// Contains polymorphic input objects to be used for invoking bidding or ad
// scoring functions in a batch for multiple ad candidates via SAPI.
message BatchedInvocationInputs {
  // The order of these inputs matters: it corresponds to the order of outputs.
  repeated google.protobuf.Any inputs = 1;
}

// Contains polymorphic outputs objects to be used for invoking bidding or ad
// scoring functions in a batch for multiple ad candidates via SAPI.
message BatchedInvocationOutputs {
  // The order of the outputs corresponds to the order of the inputs for the
  // batched invocation.
  repeated google.protobuf.Any outputs = 1;
}
